/**
 * Stylesheet: Main Stylesheet
 * ************************************************************
 *
 * 		1 Dependencies
 * 		2 Configuration
 * 	
 * 		3 Helpers
 * 		4 Modules
 * 		5 Layout
 *
 * 		6 Breakpoints
 *
 * 		7 Debug
 *
 * Recommended reading:
 * http://thesassway.com/advanced/modular-css-naming-conventions
 * http://www.sitepoint.com/architecture-sass-project/
 */


/**
 * 1 DEPENDENCIES
 *
 */

// Needs Compass ( v1.0 or greater )
@import "compass";


/**
 * 2 GLOBAL STYLE CONFIGURATION
 *
 */

$base-font-size: 16px;
$base-line-height: 24px;
$print-rem-px-fallbacks: true;	// Enable px fallback for old browsers?
$rhythm-unit: 'rem';
$rem-with-px-fallback: true;


/**
 * 3 /HELPERS
 *
 * These files are needed at the beginning so that we establish all
 * our mixins, functions, and variables that we'll be using across
 * the whole project.
 */

// Sass variables
@import "helpers/variables";

// Sass functions
@import "helpers/functions";

// import mixins
@import "helpers/mixins";


/**
 * 4 /MODULES
 *
 * This directory also contains only partials and is reserved for reusable UI patterns.
 * As a general rule of thumb, anytime you anticipate needing the same CSS more than once,
 * you should modularize it. The more your project matures, the more CSS you should be able
 * to compartmentalize into modules. Preferably, each module contains a mixin at the top
 * with corresponding declarations at the bottom for including that mixin. Crafting your
 * modules in this fashion helps you start thinking about CSS in a more modular way.
 * They are also easier to expand upon and/or extend in the future.
 */

// typography
@import "modules/typography";

// alert boxes
@import "modules/alerts";

// buttons
@import "modules/buttons";

// forms (inputs & labels)
@import "modules/forms";

// icons (fonticons)
@import "modules/icons";


/*
 * 5 /LAYOUT
 *
 *
 */

// normalize
@import "layouts/normalize";
@import "layouts/normalize_extra";

// grid (Susy)
@import "layouts/grid";

// print stylesheet
@media print {
	@import "layouts/print";
}


/**
 * 6 /BREAKPOINTS
 *
 *
 */

/**
 * BASE (MOBILE) SIZE
 * This are the mobile styles. It's what people see on their phones. If
 * you set a great foundation, you won't need to add too many styles in
 * the other stylesheets. Remember, keep it light: Speed is Important.
 */

@import "breakpoints/base";

/**
 * ENHANCED SIZES
 * This are the enhanced styles. It's for larger devices
 *
 * You can create more levels of enhancement, remember to
 * copy the folder with a new name, e.g. 'enhanced2', and
 * the _enhanced.scss file, and change the include paths.
 */

// Enhanced Size
@media only screen and (min-width: 48em) { // 48em = 768px at default $base-font-size 16px
	@import "breakpoints/enhanced";
}

/**
 * RETINA (2x RESOLUTION DEVICES)
 * This applies to the retina iPhone (4s) and iPad (2,3) along with
 * other displays with a 2x resolution. You can also create a media
 * query for retina AND a certain size if you want. Go Nuts.
 */
@media only screen and (-webkit-min-device-pixel-ratio: 1.5),
		only screen and (min--moz-device-pixel-ratio: 1.5),
		only screen and (min-device-pixel-ratio: 1.5) {

	//@import "breakpoints/2x";
}



/**
 * DEBUG
 *
 * (You can safely remove this if you don't plan to debug)
 *
 *
 * Loaded the last thing, despite being considered a 'module'
 *
 */
@import "modules/debug";
