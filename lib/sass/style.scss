/**
 * Stylesheet: Main Stylesheet
 * ************************************************************
 *
 *         1 Configurable Variables
 *
 *         2 Dependencies
 *     
 *         3 Helpers
 *                Variables
 *                Functions
 *                Mixins
 *                Material Colors
 *
 *         4 Modules
 *                Typography
 *                Alerts
 *                Buttons
 *                Forms
 *                Icons
 *                Admin Bar
 *                
 *         5 Layout
 *                Normalize
 *                Susy Grid
 *                Print Stylesheet
 *
 *         6 Base
 *
 *         7 Vendors
 *
 *         8 Debug
 *
 *
 * @link http://thesassway.com/advanced/modular-css-naming-conventions
 * @link http://www.sitepoint.com/architecture-sass-project/
 */


/**
 * 1 GLOBAL CONFIGURABLE VARIABLES
 *
 * @link http://compass-style.org/help/tutorials/configurable-variables/
 *
 * *******
 * COMPASS
 * *******
 *
 * TYPOGRAPHY
 * 
 *** Text                                {@link http://compass-style.org/reference/compass/typography/text}
 * ------
 * $use-mozilla-ellipsis-binding: false  To get full firefox support, you must install the ellipsis pattern.
 * $hide-text-direction: left            Indicates the direction you prefer to move your text when hiding it.
 *
 *** Vertical Rhythm                     {@link http://compass-style.org/reference/compass/typography/vertical_rhythm/}
 * -----------------
 * $base-font-size: 16px                 The default font size for all text in pixels
 * $base-line-height: 24px               The distance between text baselines (vertical rhythm) in pixels.
 * $rhythm-unit: "em"                    The length unit in which to output rhythm values. Supported values: px, em, rem.
 * $rem-with-px-fallback: true           Whether to output fallback values in px when using rem as the rhythm-unit.
 * $default-rhythm-border-width: 1px    
 * $default-rhythm-border-style: solid   Default values for rhythm borders properties. Supports style alone  or list of style and color.
 * $round-to-nearest-half-line: false    Allows the adjust-font-size-to mixin and the lines-for-font-size function to round the line height
 *                                       to the nearest half line height to avoid large spacing between lines.
 * $min-line-padding: 2px                Ensure there is at least this many pixels of vertical padding above and below the text.
 *
 *
 * **********
 * BREAKPOINT
 * **********
 * 
 * @link https://github.com/at-import/breakpoint/wiki/Basic-Media-Queries
 *
 * $breakpoint-default-media             
 * $breakpoint-default-feature           
 * $breakpoint-default-pair              
 * $breakpoint-to-ems                    Rewrites non-em based media queries into much more accesible em based media queries.
 *
 * @link https://github.com/at-import/breakpoint/wiki/Advanced-Media-Queries
 *
 * $breakpoint-force-media-all
 * $breakpoint-resolutions
 *
 * @link https://github.com/at-import/breakpoint/wiki/No-Query-Fallbacks
 *
 * $breakpoint-no-queries: false
 * $breakpoint-no-query-fallbacks
 */

// Compass Vertical Rhythm
$base-font-size: 16px;
$base-line-height: 24px;
$rhythm-unit: 'rem';
$rem-with-px-fallback: true;

// Breakpoint
$breakpoint-to-ems: true;

// For Susy & Breakpoint Slicer configuration see base/_grid.scss


/**
 * 2 DEPENDENCIES
 *
 * Installation:
 *		gem install sass compass susy breakpoint breakpoint-slicer sassy-maps SassyLists --no-ri --no-rdoc
 *
 * @link http://compass-style.org/
 * @link https://github.com/ericam/susy/
 * @link https://github.com/at-import/breakpoint Breakpoint
 * @link https://github.com/lolmaus/breakpoint-slicer
 * @link https://github.com/at-import/Sassy-Maps Sassy-Maps
 * @link https://github.com/at-import/SassyLists SassyLists
 *
 */

@import "compass";		// imports CSS3, Typography and Utilities modules
@import "susy";
@import "breakpoint";
@import "breakpoint-slicer";
@import "sassy-maps";
@import "SassyLists";


/**
 * 3 /HELPERS
 *
 * These files are needed at the beginning so that we establish all
 * our mixins, functions, and variables that we'll be using across
 * the whole project.
 */

// Sass variables
@import "helpers/variables";

// Sass functions
@import "helpers/functions";

// import mixins
@import "helpers/mixins";

// Material Colors Palette
@import "helpers/colors-material";


/**
 * 4 /MODULES (except debug)
 *
 * This directory contains only partials and is reserved for reusable UI patterns.
 *
 * As a general rule of thumb, anytime you anticipate needing the same CSS more than once,
 * you should modularize it. The more your project matures, the more CSS you should be able
 * to compartmentalize into modules. Preferably, each module contains a mixin at the top
 * with corresponding declarations at the bottom for including that mixin.
 *
 * Crafting your modules in this fashion helps you start thinking about CSS in a more
 * modular way. They are also easier to expand upon and/or extend in the future.
 */

// typography
@import "modules/typography";

// alert boxes
@import "modules/alerts";

// buttons
@import "modules/buttons";

// forms (inputs & labels)
@import "modules/forms";

// icons (fonticons)
@import "modules/icons";

// admin bar
@import "modules/admin_bar";


/**
 * 5 /LAYOUT
 *
 *
 */

/**
 *  Normalize
 *  @link https://github.com/JohnAlbin/normalize-scss
 */
@import "layouts/normalize";
@import "layouts/normalize_extra";

// Grid Configuration
@import "layouts/grid";

// Print Stylesheet
@media print {
	@import "layouts/print";
}


/**
 * 6 /BASE
 *
 *
 */

@import "base";


/**
 * 7 /VENDOR
 *
 * Vendor specific css, like for
 * 3rd party WordPress or jQuery plugins.
 */

@import "vendor";


/**
 * 8 DEBUG
 *
 * (You can safely remove this if you don't plan to use it)
 *
 * This must be loaded the last one of all,
 * separating it from the rest of the 'modules'
 *
 */

@import "modules/debug";

