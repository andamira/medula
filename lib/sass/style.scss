/**
 * Stylesheet: Main Stylesheet
 * ************************************************************
 *
 * 		1 Configurable Variables
 *
 * 		2 Dependencies
 * 	
 * 		3 Helpers
 *				Variables
 *				Functions
 *				Mixins
 *				Material Colors
 *
 * 		4 Modules
 *				Typography
 *				Alerts
 *				Buttons
 *				Forms
 *				Icons
 *				Admin Bar
 *				
 * 		5 Layout
 *				Normalize
 *				Susy Grid
 *				Print Stylesheet
 *
 * 		6 Base
 *
 * 		7 Vendors
 *
 * 		8 Debug
 *
 *
 * @link http://thesassway.com/advanced/modular-css-naming-conventions
 * @link http://www.sitepoint.com/architecture-sass-project/
 */


/**
 * 1 GLOBAL CONFIGURABLE VARIABLES
 *
 * @link http://compass-style.org/help/tutorials/configurable-variables/
 */

$base-font-size: 16px;
$base-line-height: 24px;

$rhythm-unit: 'rem';
$rem-with-px-fallback: true;	// set this to false to disable px fallback

$breakpoint-to-ems: true;


/**
 * 2 DEPENDENCIES
 *
 * Installation:
 *		gem install sass compass susy breakpoint sassy-maps SassyLists
 *
 * @link http://compass-style.org/
 * @link https://github.com/ericam/susy/
 * @link https://github.com/at-import/breakpoint Breakpoint
 * @link https://github.com/at-import/Sassy-Maps Sassy-Maps
 * @link https://github.com/at-import/SassyLists SassyLists
 *
 */

@import "compass";		// imports CSS3, Typography and Utilities modules
@import "susy";
@import "breakpoint";
@import "sassy-maps";
@import "SassyLists";


/**
 * 3 /HELPERS
 *
 * These files are needed at the beginning so that we establish all
 * our mixins, functions, and variables that we'll be using across
 * the whole project.
 */

// Sass variables
@import "helpers/variables";

// Sass functions
@import "helpers/functions";

// import mixins
@import "helpers/mixins";

// Material Colors Palette
@import "helpers/colors-material";


/**
 * 4 /MODULES (except debug)
 *
 * This directory contains only partials and is reserved for reusable UI patterns.
 *
 * As a general rule of thumb, anytime you anticipate needing the same CSS more than once,
 * you should modularize it. The more your project matures, the more CSS you should be able
 * to compartmentalize into modules. Preferably, each module contains a mixin at the top
 * with corresponding declarations at the bottom for including that mixin.
 *
 * Crafting your modules in this fashion helps you start thinking about CSS in a more
 * modular way. They are also easier to expand upon and/or extend in the future.
 */

// typography
@import "modules/typography";

// alert boxes
@import "modules/alerts";

// buttons
@import "modules/buttons";

// forms (inputs & labels)
@import "modules/forms";

// icons (fonticons)
@import "modules/icons";

// admin bar
@import "modules/admin_bar";


/**
 * 5 /LAYOUT
 *
 *
 */

/**
 *  normalize
 *  @link https://github.com/JohnAlbin/normalize-scss
 */
@import "layouts/normalize";
@import "layouts/normalize_extra";

// grid (Susy)
@import "layouts/grid";

// print stylesheet
@media print {
	@import "layouts/print";
}


/**
 * 6 /BASE
 *
 *
 */

@import "base";


/**
 * 7 /VENDORS
 *
 * Vendors specific css, like for
 * 3rd party WordPress or jQuery plugins.
 */

@import "vendors";


/**
 * 8 DEBUG
 *
 * (You can safely remove this if you don't plan to use it)
 *
 * This must be loaded the last one of all,
 * separating it from the rest of the 'modules'
 *
 */

@import "modules/debug";

