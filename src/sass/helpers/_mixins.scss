////
/// Stylesheet: Mixins
/// ************************************************************
///
///     1 Colors
///
///         1.1 Covering
///         1.2 Centering
///         1.3 Striped Gradient
///
///     2 Layout
///
///         2.1 CSS3 gradients
///         2.2 Input Placeholder
///         2.3 Intrinsic Ratio
///
///     3 Custom Mixins
///
///
/// A WORD OF WARNING: It's very easy to overdo it here.
/// Be careful and remember less is more.
///
/// @link http://sachagreif.com/useful-sass-mixins/
/// @link http://thesassway.com/intermediate/leveraging-sass-mixins-for-cleaner-code
/// @link http://web-design-weekly.com/blog/2013/05/12/handy-sass-mixins/
////


///
/// 1 COLORS MIXINS
///

///
/// 1.1 STRIPED GRADIENT MIXIN
///
/// Usage:
///     body {
///         @include stripes(to right, #8e44ad #2c3e50 #2980b9 #16a085 #27ae60);
///     }
///
/// @link http://css-tricks.com/snippets/sass/striped-gradient-mixin/
///
@mixin stripes($direction, $colors) {
	$length: length($colors);
	
	@if $length > 1 {
		$stripes: ();
		
		@for $i from 1 through $length {
			$stripe: (100% / $length) * ($i - 1);
			
			@if $i > 1 {
				$stripes: append($stripes, nth($colors, $i - 1) $stripe, comma);
			}
			
			$stripes: append($stripes, nth($colors, $i) $stripe, comma);
		}
		
		background-image: linear-gradient($direction, $stripes);
	} @else if $length == 1 {
		background-color: $colors;
	}
}

///
/// 1.1 CSS3 GRADIENTS
///
/// Be careful with these since they can
/// really slow down your CSS. Don't overdo it.
///
/// USAGE: @include css-gradient( #dfdfdf, #f8f8f8 );
///
@mixin css-gradient($from: #dfdfdf, $to: #f8f8f8) {
	background-color: $to;
	background-image: -webkit-gradient(linear, left top, left bottom, from($from), to($to));
	background-image: -webkit-linear-gradient(top, $from, $to);
	background-image: -moz-linear-gradient(top, $from, $to);
	background-image: -o-linear-gradient(top, $from, $to);
	background-image: linear-gradient(to bottom, $from, $to);
}

///
/// 2 LAYOUT
///

///
/// 2.1 COVERING MIXIN
///
/// Usage:
///     .overlay {
///         @include coverer;
///     }
///
/// @link http://css-tricks.com/snippets/sass/covering-mixin/
///
@mixin coverer {
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
}

///
/// 2.2 CENTERING MIXIN
///
/// Usage:
///    .parent {
///        position: relative;
///    }
///    .child {
///        @include centerer;
///    }
///
/// @link http://css-tricks.com/snippets/sass/centering-mixin/
///
@mixin centerer {
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
}

///
/// 2.3 INTRINSIC RATIO
///
/// @link https://github.com/aebsr/intrinsic-ratio-generator
///
@mixin ir($ratio, $width: 100) {
	width: $width * 1%;
	height: 0;
	padding-bottom: ($width / $ratio) * 1%;
}


///
/// 3 TYPOGRAPHY & FORMS MIXINS
///

///
/// 3.1 FONT-FACE
///
/// Font File Formats Support:
/// eot:      IE6-IE8 & IE9 compat mode
/// ttf:      Safari, Android, iOS, Chrome 4+, Firefox 3.5, Opera 10+, Safari 3â€”5
/// svg:      Legacy iOS
/// woff:     Modern Browsers, Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+
/// woff2:    Super Modern Browsers, Chrome 26+, Opera 23+
///
/// @see /src/sass/modules/_typography.scss
/// @link http://css-tricks.com/snippets/css/using-font-face/
/// @source https://gist.github.com/jonathantneal/d0460e5c2d5d7f9bc5e6
///
@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {
	$src: null;
	$extmods: (
		eot: "?",
		svg: "#" + str-replace($name, " ", "_")
	);
	$formats: (
		otf: "opentype",
		ttf: "truetype"
	);
	@each $ext in $exts {
		$extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
		$format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
		$src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
	}
	@font-face {
		font-family: quote($name);
		font-style: $style;
		font-weight: $weight;
		src: $src;
	}
}

///
/// 3.2 INPUT PLACEHOLDER
///
/// Style placeholder text in inputs
///
/// @link http://css-tricks.com/snippets/css/style-placeholder-text/
///
@mixin input-placeholder($color: #000, $opacity: auto, $ttime: auto, $ttype: ease) {
	&::placeholder {
		color: $color;
		@if $opacity != 'auto' {
			opacity: $opacity;
		}
		@if $ttime!= 'auto' {
			transition: opacity $ttime $ttime $ttype;
		}
	}
}


///
/// 4 CUSTOM MIXINS
///


